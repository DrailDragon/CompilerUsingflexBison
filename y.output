Terminals unused in grammar

   WHITESPACE
   AND
   OR
   EOL
   TYPEDEF
   PRINT_FLOAT
   SIGNED
   UNSIGNED
   CONST
   EOFV
   CASE
   DEFAULT
   SWITCH
   WHILE
   DO
   CONTINUE
   BREAK
   RETURN
   '!'
   '~'


Grammar

    0 $accept: StrtP $end

    1 StrtP: ExtDecl
    2      | StrtP ExtDecl

    3 ExtDecl: Decl
    4        | FuncDefn

    5 Decl: TypeId Id SemiCol

    6 TypeId: INT
    7       | BOOL
    8       | FLOAT
    9       | VOID

   10 Id: ID

   11 $@1: %empty

   12 BlockStmt: LeftBrace $@1 StmtList RightBrace

   13 FuncDefn: TypeId Id LeftParen RightParen BlockStmt

   14 StmtList: Stmt
   15         | StmtList Stmt

   16 Stmt: Exp SemiCol
   17     | For
   18     | IfStmt
   19     | Decl

   20 For: FOR LeftParen Exp SemiCol Exp SemiCol Exp RightParen BlockStmt

   21 IfStmt: IF LeftParen Exp RightParen BlockStmt
   22       | IF LeftParen Exp RightParen BlockStmt ELSE BlockStmt

   23 Exp: Id
   24    | LeftParen Exp RightParen
   25    | '-' Integer
   26    | Integer Opr Exp
   27    | Id Opr Exp
   28    | Func_Call
   29    | InOut
   30    | TRUEV
   31    | FALSEV
   32    | Integer
   33    | Strng

   34 Func_Call: CALL Id LeftParen RightParen

   35 Opr: '='
   36    | '|'
   37    | '&'
   38    | EQ
   39    | NE
   40    | '>'
   41    | GE
   42    | '<'
   43    | LE
   44    | '+'
   45    | '-'
   46    | '*'
   47    | '/'

   48 InOut: PRINT_VAR Id
   49      | PRINT_INT Integer
   50      | PRINT_STR Strng
   51      | SCAN OP_IN Id

   52 Integer: INT_CONST

   53 Strng: STR_LITERAL

   54 SemiCol: ';'
   55        | error '\n'

   56 LeftBrace: '{'
   57          | error '}'

   58 RightBrace: '}'
   59           | error ';'

   60 LeftParen: '('
   61          | error ')'

   62 RightParen: ')'
   63           | error '\n'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 55 63
'!' (33)
'&' (38) 37
'(' (40) 60
')' (41) 61 62
'*' (42) 46
'+' (43) 44
'-' (45) 25 45
'/' (47) 47
';' (59) 54 59
'<' (60) 42
'=' (61) 35
'>' (62) 40
'{' (123) 56
'|' (124) 36
'}' (125) 57 58
'~' (126)
error (256) 55 57 59 61 63
ID (258) 10
STR_LITERAL (259) 53
WHITESPACE (260)
CALL (261) 34
OP_IN (262) 51
AND (263)
OR (264)
LE (265) 43
GE (266) 41
EQ (267) 38
NE (268) 39
EOL (269)
UMINUS (270)
TYPEDEF (271)
PRINT_VAR (272) 48
PRINT_INT (273) 49
PRINT_STR (274) 50
PRINT_FLOAT (275)
SCAN (276) 51
INT (277) 6
SIGNED (278)
UNSIGNED (279)
FLOAT (280) 8
CONST (281)
VOID (282) 9
BOOL (283) 7
EOFV (284)
INT_CONST (285) 52
TRUEV (286) 30
FALSEV (287) 31
CASE (288)
DEFAULT (289)
IF (290) 21 22
ELSE (291) 22
SWITCH (292)
WHILE (293)
DO (294)
FOR (295) 20
CONTINUE (296)
BREAK (297)
RETURN (298)
BINOP (299)
IFX (300)


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
StrtP (64)
    on left: 1 2, on right: 0 2
ExtDecl (65)
    on left: 3 4, on right: 1 2
Decl (66)
    on left: 5, on right: 3 19
TypeId (67)
    on left: 6 7 8 9, on right: 5 13
Id (68)
    on left: 10, on right: 5 13 23 27 34 48 51
BlockStmt (69)
    on left: 12, on right: 13 20 21 22
$@1 (70)
    on left: 11, on right: 12
FuncDefn (71)
    on left: 13, on right: 4
StmtList (72)
    on left: 14 15, on right: 12 15
Stmt (73)
    on left: 16 17 18 19, on right: 14 15
For (74)
    on left: 20, on right: 17
IfStmt (75)
    on left: 21 22, on right: 18
Exp (76)
    on left: 23 24 25 26 27 28 29 30 31 32 33, on right: 16 20 21 22
    24 26 27
Func_Call (77)
    on left: 34, on right: 28
Opr (78)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47, on right: 26 27
InOut (79)
    on left: 48 49 50 51, on right: 29
Integer (80)
    on left: 52, on right: 25 26 32 49
Strng (81)
    on left: 53, on right: 33 50
SemiCol (82)
    on left: 54 55, on right: 5 16 20
LeftBrace (83)
    on left: 56 57, on right: 12
RightBrace (84)
    on left: 58 59, on right: 12
LeftParen (85)
    on left: 60 61, on right: 13 20 21 22 24 34
RightParen (86)
    on left: 62 63, on right: 13 20 21 22 24 34


State 0

    0 $accept: . StrtP $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3
    BOOL   shift, and go to state 4

    StrtP     go to state 5
    ExtDecl   go to state 6
    Decl      go to state 7
    TypeId    go to state 8
    FuncDefn  go to state 9


State 1

    6 TypeId: INT .

    $default  reduce using rule 6 (TypeId)


State 2

    8 TypeId: FLOAT .

    $default  reduce using rule 8 (TypeId)


State 3

    9 TypeId: VOID .

    $default  reduce using rule 9 (TypeId)


State 4

    7 TypeId: BOOL .

    $default  reduce using rule 7 (TypeId)


State 5

    0 $accept: StrtP . $end
    2 StrtP: StrtP . ExtDecl

    $end   shift, and go to state 10
    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3
    BOOL   shift, and go to state 4

    ExtDecl   go to state 11
    Decl      go to state 7
    TypeId    go to state 8
    FuncDefn  go to state 9


State 6

    1 StrtP: ExtDecl .

    $default  reduce using rule 1 (StrtP)


State 7

    3 ExtDecl: Decl .

    $default  reduce using rule 3 (ExtDecl)


State 8

    5 Decl: TypeId . Id SemiCol
   13 FuncDefn: TypeId . Id LeftParen RightParen BlockStmt

    ID  shift, and go to state 12

    Id  go to state 13


State 9

    4 ExtDecl: FuncDefn .

    $default  reduce using rule 4 (ExtDecl)


State 10

    0 $accept: StrtP $end .

    $default  accept


State 11

    2 StrtP: StrtP ExtDecl .

    $default  reduce using rule 2 (StrtP)


State 12

   10 Id: ID .

    $default  reduce using rule 10 (Id)


State 13

    5 Decl: TypeId Id . SemiCol
   13 FuncDefn: TypeId Id . LeftParen RightParen BlockStmt

    error  shift, and go to state 14
    ';'    shift, and go to state 15
    '('    shift, and go to state 16

    SemiCol    go to state 17
    LeftParen  go to state 18


State 14

   55 SemiCol: error . '\n'
   61 LeftParen: error . ')'

    '\n'  shift, and go to state 19
    ')'   shift, and go to state 20


State 15

   54 SemiCol: ';' .

    $default  reduce using rule 54 (SemiCol)


State 16

   60 LeftParen: '(' .

    $default  reduce using rule 60 (LeftParen)


State 17

    5 Decl: TypeId Id SemiCol .

    $default  reduce using rule 5 (Decl)


State 18

   13 FuncDefn: TypeId Id LeftParen . RightParen BlockStmt

    error  shift, and go to state 21
    ')'    shift, and go to state 22

    RightParen  go to state 23


State 19

   55 SemiCol: error '\n' .

    $default  reduce using rule 55 (SemiCol)


State 20

   61 LeftParen: error ')' .

    $default  reduce using rule 61 (LeftParen)


State 21

   63 RightParen: error . '\n'

    '\n'  shift, and go to state 24


State 22

   62 RightParen: ')' .

    $default  reduce using rule 62 (RightParen)


State 23

   13 FuncDefn: TypeId Id LeftParen RightParen . BlockStmt

    error  shift, and go to state 25
    '{'    shift, and go to state 26

    BlockStmt  go to state 27
    LeftBrace  go to state 28


State 24

   63 RightParen: error '\n' .

    $default  reduce using rule 63 (RightParen)


State 25

   57 LeftBrace: error . '}'

    '}'  shift, and go to state 29


State 26

   56 LeftBrace: '{' .

    $default  reduce using rule 56 (LeftBrace)


State 27

   13 FuncDefn: TypeId Id LeftParen RightParen BlockStmt .

    $default  reduce using rule 13 (FuncDefn)


State 28

   12 BlockStmt: LeftBrace . $@1 StmtList RightBrace

    $default  reduce using rule 11 ($@1)

    $@1  go to state 30


State 29

   57 LeftBrace: error '}' .

    $default  reduce using rule 57 (LeftBrace)


State 30

   12 BlockStmt: LeftBrace $@1 . StmtList RightBrace

    error        shift, and go to state 31
    ID           shift, and go to state 12
    STR_LITERAL  shift, and go to state 32
    CALL         shift, and go to state 33
    PRINT_VAR    shift, and go to state 34
    PRINT_INT    shift, and go to state 35
    PRINT_STR    shift, and go to state 36
    SCAN         shift, and go to state 37
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    BOOL         shift, and go to state 4
    INT_CONST    shift, and go to state 38
    TRUEV        shift, and go to state 39
    FALSEV       shift, and go to state 40
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    '-'          shift, and go to state 43
    '('          shift, and go to state 16

    Decl       go to state 44
    TypeId     go to state 45
    Id         go to state 46
    StmtList   go to state 47
    Stmt       go to state 48
    For        go to state 49
    IfStmt     go to state 50
    Exp        go to state 51
    Func_Call  go to state 52
    InOut      go to state 53
    Integer    go to state 54
    Strng      go to state 55
    LeftParen  go to state 56


State 31

   61 LeftParen: error . ')'

    ')'  shift, and go to state 20


State 32

   53 Strng: STR_LITERAL .

    $default  reduce using rule 53 (Strng)


State 33

   34 Func_Call: CALL . Id LeftParen RightParen

    ID  shift, and go to state 12

    Id  go to state 57


State 34

   48 InOut: PRINT_VAR . Id

    ID  shift, and go to state 12

    Id  go to state 58


State 35

   49 InOut: PRINT_INT . Integer

    INT_CONST  shift, and go to state 38

    Integer  go to state 59


State 36

   50 InOut: PRINT_STR . Strng

    STR_LITERAL  shift, and go to state 32

    Strng  go to state 60


State 37

   51 InOut: SCAN . OP_IN Id

    OP_IN  shift, and go to state 61


State 38

   52 Integer: INT_CONST .

    $default  reduce using rule 52 (Integer)


State 39

   30 Exp: TRUEV .

    $default  reduce using rule 30 (Exp)


State 40

   31 Exp: FALSEV .

    $default  reduce using rule 31 (Exp)


State 41

   21 IfStmt: IF . LeftParen Exp RightParen BlockStmt
   22       | IF . LeftParen Exp RightParen BlockStmt ELSE BlockStmt

    error  shift, and go to state 31
    '('    shift, and go to state 16

    LeftParen  go to state 62


State 42

   20 For: FOR . LeftParen Exp SemiCol Exp SemiCol Exp RightParen BlockStmt

    error  shift, and go to state 31
    '('    shift, and go to state 16

    LeftParen  go to state 63


State 43

   25 Exp: '-' . Integer

    INT_CONST  shift, and go to state 38

    Integer  go to state 64


State 44

   19 Stmt: Decl .

    $default  reduce using rule 19 (Stmt)


State 45

    5 Decl: TypeId . Id SemiCol

    ID  shift, and go to state 12

    Id  go to state 65


State 46

   23 Exp: Id .
   27    | Id . Opr Exp

    LE   shift, and go to state 66
    GE   shift, and go to state 67
    EQ   shift, and go to state 68
    NE   shift, and go to state 69
    '='  shift, and go to state 70
    '|'  shift, and go to state 71
    '&'  shift, and go to state 72
    '>'  shift, and go to state 73
    '<'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 23 (Exp)

    Opr  go to state 79


State 47

   12 BlockStmt: LeftBrace $@1 StmtList . RightBrace
   15 StmtList: StmtList . Stmt

    error        shift, and go to state 80
    ID           shift, and go to state 12
    STR_LITERAL  shift, and go to state 32
    CALL         shift, and go to state 33
    PRINT_VAR    shift, and go to state 34
    PRINT_INT    shift, and go to state 35
    PRINT_STR    shift, and go to state 36
    SCAN         shift, and go to state 37
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    BOOL         shift, and go to state 4
    INT_CONST    shift, and go to state 38
    TRUEV        shift, and go to state 39
    FALSEV       shift, and go to state 40
    IF           shift, and go to state 41
    FOR          shift, and go to state 42
    '-'          shift, and go to state 43
    '}'          shift, and go to state 81
    '('          shift, and go to state 16

    Decl        go to state 44
    TypeId      go to state 45
    Id          go to state 46
    Stmt        go to state 82
    For         go to state 49
    IfStmt      go to state 50
    Exp         go to state 51
    Func_Call   go to state 52
    InOut       go to state 53
    Integer     go to state 54
    Strng       go to state 55
    RightBrace  go to state 83
    LeftParen   go to state 56


State 48

   14 StmtList: Stmt .

    $default  reduce using rule 14 (StmtList)


State 49

   17 Stmt: For .

    $default  reduce using rule 17 (Stmt)


State 50

   18 Stmt: IfStmt .

    $default  reduce using rule 18 (Stmt)


State 51

   16 Stmt: Exp . SemiCol

    error  shift, and go to state 84
    ';'    shift, and go to state 15

    SemiCol  go to state 85


State 52

   28 Exp: Func_Call .

    $default  reduce using rule 28 (Exp)


State 53

   29 Exp: InOut .

    $default  reduce using rule 29 (Exp)


State 54

   26 Exp: Integer . Opr Exp
   32    | Integer .

    LE   shift, and go to state 66
    GE   shift, and go to state 67
    EQ   shift, and go to state 68
    NE   shift, and go to state 69
    '='  shift, and go to state 70
    '|'  shift, and go to state 71
    '&'  shift, and go to state 72
    '>'  shift, and go to state 73
    '<'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78

    $default  reduce using rule 32 (Exp)

    Opr  go to state 86


State 55

   33 Exp: Strng .

    $default  reduce using rule 33 (Exp)


State 56

   24 Exp: LeftParen . Exp RightParen

    error        shift, and go to state 31
    ID           shift, and go to state 12
    STR_LITERAL  shift, and go to state 32
    CALL         shift, and go to state 33
    PRINT_VAR    shift, and go to state 34
    PRINT_INT    shift, and go to state 35
    PRINT_STR    shift, and go to state 36
    SCAN         shift, and go to state 37
    INT_CONST    shift, and go to state 38
    TRUEV        shift, and go to state 39
    FALSEV       shift, and go to state 40
    '-'          shift, and go to state 43
    '('          shift, and go to state 16

    Id         go to state 46
    Exp        go to state 87
    Func_Call  go to state 52
    InOut      go to state 53
    Integer    go to state 54
    Strng      go to state 55
    LeftParen  go to state 56


State 57

   34 Func_Call: CALL Id . LeftParen RightParen

    error  shift, and go to state 31
    '('    shift, and go to state 16

    LeftParen  go to state 88


State 58

   48 InOut: PRINT_VAR Id .

    $default  reduce using rule 48 (InOut)


State 59

   49 InOut: PRINT_INT Integer .

    $default  reduce using rule 49 (InOut)


State 60

   50 InOut: PRINT_STR Strng .

    $default  reduce using rule 50 (InOut)


State 61

   51 InOut: SCAN OP_IN . Id

    ID  shift, and go to state 12

    Id  go to state 89


State 62

   21 IfStmt: IF LeftParen . Exp RightParen BlockStmt
   22       | IF LeftParen . Exp RightParen BlockStmt ELSE BlockStmt

    error        shift, and go to state 31
    ID           shift, and go to state 12
    STR_LITERAL  shift, and go to state 32
    CALL         shift, and go to state 33
    PRINT_VAR    shift, and go to state 34
    PRINT_INT    shift, and go to state 35
    PRINT_STR    shift, and go to state 36
    SCAN         shift, and go to state 37
    INT_CONST    shift, and go to state 38
    TRUEV        shift, and go to state 39
    FALSEV       shift, and go to state 40
    '-'          shift, and go to state 43
    '('          shift, and go to state 16

    Id         go to state 46
    Exp        go to state 90
    Func_Call  go to state 52
    InOut      go to state 53
    Integer    go to state 54
    Strng      go to state 55
    LeftParen  go to state 56


State 63

   20 For: FOR LeftParen . Exp SemiCol Exp SemiCol Exp RightParen BlockStmt

    error        shift, and go to state 31
    ID           shift, and go to state 12
    STR_LITERAL  shift, and go to state 32
    CALL         shift, and go to state 33
    PRINT_VAR    shift, and go to state 34
    PRINT_INT    shift, and go to state 35
    PRINT_STR    shift, and go to state 36
    SCAN         shift, and go to state 37
    INT_CONST    shift, and go to state 38
    TRUEV        shift, and go to state 39
    FALSEV       shift, and go to state 40
    '-'          shift, and go to state 43
    '('          shift, and go to state 16

    Id         go to state 46
    Exp        go to state 91
    Func_Call  go to state 52
    InOut      go to state 53
    Integer    go to state 54
    Strng      go to state 55
    LeftParen  go to state 56


State 64

   25 Exp: '-' Integer .

    $default  reduce using rule 25 (Exp)


State 65

    5 Decl: TypeId Id . SemiCol

    error  shift, and go to state 84
    ';'    shift, and go to state 15

    SemiCol  go to state 17


State 66

   43 Opr: LE .

    $default  reduce using rule 43 (Opr)


State 67

   41 Opr: GE .

    $default  reduce using rule 41 (Opr)


State 68

   38 Opr: EQ .

    $default  reduce using rule 38 (Opr)


State 69

   39 Opr: NE .

    $default  reduce using rule 39 (Opr)


State 70

   35 Opr: '=' .

    $default  reduce using rule 35 (Opr)


State 71

   36 Opr: '|' .

    $default  reduce using rule 36 (Opr)


State 72

   37 Opr: '&' .

    $default  reduce using rule 37 (Opr)


State 73

   40 Opr: '>' .

    $default  reduce using rule 40 (Opr)


State 74

   42 Opr: '<' .

    $default  reduce using rule 42 (Opr)


State 75

   44 Opr: '+' .

    $default  reduce using rule 44 (Opr)


State 76

   45 Opr: '-' .

    $default  reduce using rule 45 (Opr)


State 77

   46 Opr: '*' .

    $default  reduce using rule 46 (Opr)


State 78

   47 Opr: '/' .

    $default  reduce using rule 47 (Opr)


State 79

   27 Exp: Id Opr . Exp

    error        shift, and go to state 31
    ID           shift, and go to state 12
    STR_LITERAL  shift, and go to state 32
    CALL         shift, and go to state 33
    PRINT_VAR    shift, and go to state 34
    PRINT_INT    shift, and go to state 35
    PRINT_STR    shift, and go to state 36
    SCAN         shift, and go to state 37
    INT_CONST    shift, and go to state 38
    TRUEV        shift, and go to state 39
    FALSEV       shift, and go to state 40
    '-'          shift, and go to state 43
    '('          shift, and go to state 16

    Id         go to state 46
    Exp        go to state 92
    Func_Call  go to state 52
    InOut      go to state 53
    Integer    go to state 54
    Strng      go to state 55
    LeftParen  go to state 56


State 80

   59 RightBrace: error . ';'
   61 LeftParen: error . ')'

    ';'  shift, and go to state 93
    ')'  shift, and go to state 20


State 81

   58 RightBrace: '}' .

    $default  reduce using rule 58 (RightBrace)


State 82

   15 StmtList: StmtList Stmt .

    $default  reduce using rule 15 (StmtList)


State 83

   12 BlockStmt: LeftBrace $@1 StmtList RightBrace .

    $default  reduce using rule 12 (BlockStmt)


State 84

   55 SemiCol: error . '\n'

    '\n'  shift, and go to state 19


State 85

   16 Stmt: Exp SemiCol .

    $default  reduce using rule 16 (Stmt)


State 86

   26 Exp: Integer Opr . Exp

    error        shift, and go to state 31
    ID           shift, and go to state 12
    STR_LITERAL  shift, and go to state 32
    CALL         shift, and go to state 33
    PRINT_VAR    shift, and go to state 34
    PRINT_INT    shift, and go to state 35
    PRINT_STR    shift, and go to state 36
    SCAN         shift, and go to state 37
    INT_CONST    shift, and go to state 38
    TRUEV        shift, and go to state 39
    FALSEV       shift, and go to state 40
    '-'          shift, and go to state 43
    '('          shift, and go to state 16

    Id         go to state 46
    Exp        go to state 94
    Func_Call  go to state 52
    InOut      go to state 53
    Integer    go to state 54
    Strng      go to state 55
    LeftParen  go to state 56


State 87

   24 Exp: LeftParen Exp . RightParen

    error  shift, and go to state 21
    ')'    shift, and go to state 22

    RightParen  go to state 95


State 88

   34 Func_Call: CALL Id LeftParen . RightParen

    error  shift, and go to state 21
    ')'    shift, and go to state 22

    RightParen  go to state 96


State 89

   51 InOut: SCAN OP_IN Id .

    $default  reduce using rule 51 (InOut)


State 90

   21 IfStmt: IF LeftParen Exp . RightParen BlockStmt
   22       | IF LeftParen Exp . RightParen BlockStmt ELSE BlockStmt

    error  shift, and go to state 21
    ')'    shift, and go to state 22

    RightParen  go to state 97


State 91

   20 For: FOR LeftParen Exp . SemiCol Exp SemiCol Exp RightParen BlockStmt

    error  shift, and go to state 84
    ';'    shift, and go to state 15

    SemiCol  go to state 98


State 92

   27 Exp: Id Opr Exp .

    $default  reduce using rule 27 (Exp)


State 93

   59 RightBrace: error ';' .

    $default  reduce using rule 59 (RightBrace)


State 94

   26 Exp: Integer Opr Exp .

    $default  reduce using rule 26 (Exp)


State 95

   24 Exp: LeftParen Exp RightParen .

    $default  reduce using rule 24 (Exp)


State 96

   34 Func_Call: CALL Id LeftParen RightParen .

    $default  reduce using rule 34 (Func_Call)


State 97

   21 IfStmt: IF LeftParen Exp RightParen . BlockStmt
   22       | IF LeftParen Exp RightParen . BlockStmt ELSE BlockStmt

    error  shift, and go to state 25
    '{'    shift, and go to state 26

    BlockStmt  go to state 99
    LeftBrace  go to state 28


State 98

   20 For: FOR LeftParen Exp SemiCol . Exp SemiCol Exp RightParen BlockStmt

    error        shift, and go to state 31
    ID           shift, and go to state 12
    STR_LITERAL  shift, and go to state 32
    CALL         shift, and go to state 33
    PRINT_VAR    shift, and go to state 34
    PRINT_INT    shift, and go to state 35
    PRINT_STR    shift, and go to state 36
    SCAN         shift, and go to state 37
    INT_CONST    shift, and go to state 38
    TRUEV        shift, and go to state 39
    FALSEV       shift, and go to state 40
    '-'          shift, and go to state 43
    '('          shift, and go to state 16

    Id         go to state 46
    Exp        go to state 100
    Func_Call  go to state 52
    InOut      go to state 53
    Integer    go to state 54
    Strng      go to state 55
    LeftParen  go to state 56


State 99

   21 IfStmt: IF LeftParen Exp RightParen BlockStmt .
   22       | IF LeftParen Exp RightParen BlockStmt . ELSE BlockStmt

    ELSE  shift, and go to state 101

    $default  reduce using rule 21 (IfStmt)


State 100

   20 For: FOR LeftParen Exp SemiCol Exp . SemiCol Exp RightParen BlockStmt

    error  shift, and go to state 84
    ';'    shift, and go to state 15

    SemiCol  go to state 102


State 101

   22 IfStmt: IF LeftParen Exp RightParen BlockStmt ELSE . BlockStmt

    error  shift, and go to state 25
    '{'    shift, and go to state 26

    BlockStmt  go to state 103
    LeftBrace  go to state 28


State 102

   20 For: FOR LeftParen Exp SemiCol Exp SemiCol . Exp RightParen BlockStmt

    error        shift, and go to state 31
    ID           shift, and go to state 12
    STR_LITERAL  shift, and go to state 32
    CALL         shift, and go to state 33
    PRINT_VAR    shift, and go to state 34
    PRINT_INT    shift, and go to state 35
    PRINT_STR    shift, and go to state 36
    SCAN         shift, and go to state 37
    INT_CONST    shift, and go to state 38
    TRUEV        shift, and go to state 39
    FALSEV       shift, and go to state 40
    '-'          shift, and go to state 43
    '('          shift, and go to state 16

    Id         go to state 46
    Exp        go to state 104
    Func_Call  go to state 52
    InOut      go to state 53
    Integer    go to state 54
    Strng      go to state 55
    LeftParen  go to state 56


State 103

   22 IfStmt: IF LeftParen Exp RightParen BlockStmt ELSE BlockStmt .

    $default  reduce using rule 22 (IfStmt)


State 104

   20 For: FOR LeftParen Exp SemiCol Exp SemiCol Exp . RightParen BlockStmt

    error  shift, and go to state 21
    ')'    shift, and go to state 22

    RightParen  go to state 105


State 105

   20 For: FOR LeftParen Exp SemiCol Exp SemiCol Exp RightParen . BlockStmt

    error  shift, and go to state 25
    '{'    shift, and go to state 26

    BlockStmt  go to state 106
    LeftBrace  go to state 28


State 106

   20 For: FOR LeftParen Exp SemiCol Exp SemiCol Exp RightParen BlockStmt .

    $default  reduce using rule 20 (For)
